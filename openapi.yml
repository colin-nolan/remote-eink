---

openapi: 3.0.0
info:
  version: 0.0.1
  title: Display Image Service

paths:
  /display:
    get:
      summary: Get displays
      responses:
        200:
          description: List of displays retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: ID of displays.
          links:
            getDisplayById:
              operationRef: "#/paths/~1display~1{displayId}/get"
              parameters:
                displayId: "$response.body#/id"
              description: >
                The `id` value returned in the response can be used as
                the `displayId` parameter in `GET /display/{displayId}`.

  /display/{displayId}:
    get:
      summary: Get a display
      parameters:
        - $ref: "#/components/parameters/displayId"
      responses:
        200:
          description: Display retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Display"
        404:
          description: Display not found

  /display/{displayId}/image:
    get:
      summary: Get IDs of images that can be displayed
      parameters:
        - $ref: "#/components/parameters/displayId"
      responses:
        200:
          description: Image list retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ImageId"
#          TODO
#          links:
#            getImageById:
#              operationRef: "#/paths/~1image~1{imageId}/get"
#              parameters:
#                displayId: "$response.body#/id"
#              description: >
#                The `id` value returned in the response can be used as
#                the `displayId` parameter in `GET /display/{displayId}`.

  /display/{displayId}/image/{imageId}:
    get:
      summary: Get image from the device
      parameters:
        - $ref: "#/components/parameters/displayId"
        - $ref: "#/components/parameters/imageId"
      responses:
        200:
          description: Image retrieved
          content:
            image/*:
              schema:
                type: string
                format: binary
        404:
          description: Image not found.

    post:
      summary: Uploads an image onto the device
      parameters:
        - $ref: "#/components/parameters/displayId"
        - $ref: "#/components/parameters/imageId"
      requestBody:
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        201:
          description: Image created.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ImageId"

#        links:
#          GetUserByUserId:   # <---- arbitrary name for the link
#            operationId: getUser
#            # or
#            # operationRef: '#/paths/~1users~1{userId}/get'
#            parameters:
#              userId: '$response.body#/id'

#  /display/{displayId}/sleep:
#    get:
#      summary: "Gets whether the device is sleeping"
#      tags:
#        - sleep
#      responses:
#        200:
#          description: "Sleep status"
#          content:
#            image/*:
#              application/json:
#                schema:
#                  type: bool
#
#    post:
#      summary: "Post command for the device to sleep"
#      requestBody:
#        content:
#          image/*:
#            schema:
#              type: string
#              format: binary
#      responses:
#        201:
#          description: "Device put into sleep"

components:
  parameters:
    displayId:
      name: displayId
      in: path
      required: true
      schema:
        type: string
      description: ID of the display.
    imageId:
      name: imageId
      in: path
      required: true
      schema:
        type: string
      description: ID of the image.

  schemas:
    ImageId:
      type: object
      properties:
        id:
          type: string
          description: ID of image.

    Display:
      type: object
      properties:
        id:
          type: string
        currentImage:
          $ref: "#/components/schemas/ImageId"
        images:
          type: array
          items:
            $ref: "#/components/schemas/ImageId"
        orientation:
          type: integer
        cycleImages:
          type: boolean
        cycleRandomly:
          type: boolean
        cycleAfterSeconds:
          type: integer
